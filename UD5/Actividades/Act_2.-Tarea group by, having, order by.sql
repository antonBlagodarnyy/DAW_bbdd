REM ******** TABLA DEPART Y EMPLE: ***********

DROP TABLE DEPART cascade constraints; 

CREATE TABLE DEPART (
 DEPT_NO  NUMBER(2) CONSTRAINT pk_depart PRIMARY KEY,
 DNOMBRE  VARCHAR2(14), 
 LOC      VARCHAR2(14) ) ;

INSERT INTO DEPART VALUES (10,'CONTABILIDAD','SEVILLA');
INSERT INTO DEPART VALUES (20,'INVESTIGACION','MADRID');
INSERT INTO DEPART VALUES (30,'VENTAS','BARCELONA');
INSERT INTO DEPART VALUES (40,'PRODUCCION','BILBAO');
COMMIT;

ALTER SESSION SET NLS_DATE_FORMAT='DD/MM/YYYY';

DROP TABLE EMPLE cascade constraints; 

CREATE TABLE EMPLE (
 EMP_NO    NUMBER(4) CONSTRAINT pk_emple PRIMARY KEY,
 APELLIDO  VARCHAR2(10)  ,
 OFICIO    VARCHAR2(10)  ,
 DIR       NUMBER(4) ,
 FECHA_ALT DATE      ,
 SALARIO   NUMBER(7),
 COMISION  NUMBER(7),
 DEPT_NO   NUMBER(2) NOT NULL,
 CONSTRAINT fk_emple_depart FOREIGN KEY (dept_no) REFERENCES depart (dept_no)
) ;

INSERT INTO EMPLE VALUES (7369,'SANCHEZ','EMPLEADO',7902,'17/12/1990',1040,NULL,20);
INSERT INTO EMPLE VALUES (7499,'ARROYO','VENDEDOR',7698,'20/02/1990',1500,390,30);
INSERT INTO EMPLE VALUES (7521,'SALA','VENDEDOR',7698,'22/02/1991',1625,650,30);
INSERT INTO EMPLE VALUES (7566,'JIMENEZ','DIRECTOR',7839,'02/04/1991',2900,NULL,20);
INSERT INTO EMPLE VALUES (7654,'MARTIN','VENDEDOR',7698,'29/09/1991',1600,1020,30);
INSERT INTO EMPLE VALUES (7698,'NEGRO','DIRECTOR',7839,'01/05/1991',3005,NULL,30);
INSERT INTO EMPLE VALUES (7782,'CEREZO','DIRECTOR',7839,'09/06/1991',2885,NULL,10);
INSERT INTO EMPLE VALUES (7788,'GIL','ANALISTA',7566,'09/11/1991',3000,NULL,20);
INSERT INTO EMPLE VALUES (7839,'REY','PRESIDENTE',NULL,'17/11/1991',4100,NULL,10);
INSERT INTO EMPLE VALUES (7844,'TOVAR','VENDEDOR',7698,'08/09/1991',1350,0,30);
INSERT INTO EMPLE VALUES (7876,'ALONSO','EMPLEADO',7788,'23/09/1991',1430,NULL,20);
INSERT INTO EMPLE VALUES (7900,'JIMENO','EMPLEADO',7698,'03/12/1991',1335,NULL,30);
INSERT INTO EMPLE VALUES (7902,'FERNANDEZ','ANALISTA',7566,'03/12/1991',3000,NULL,20);
INSERT INTO EMPLE VALUES (7934,'MUÑOZ','EMPLEADO',7782,'23/01/1992',1690,NULL,10);
COMMIT;

REM ***TABLA ALUM0405***************

Drop table ALUM0405;
create table ALUM0405(
DNI	VARCHAR2(10) CONSTRAINT pk_aul0405 PRIMARY KEY,
NOMBRE	VARCHAR2(15) NOT NULL,
APELLIDOS	VARCHAR2(20) NOT NULL,
FECHA_NAC	DATE,
DIRECCION	VARCHAR2(20),
POBLACION	VARCHAR2(20),
PROVINCIA	VARCHAR2(20),
CURSO	NUMBER(2)  NOT NULL,
NIVEL	VARCHAR2(10)  NOT NULL,
CLASE	CHAR(1)  NOT NULL,
FALTAS1	NUMBER(2),
FALTAS2	NUMBER(2),
FALTAS3	NUMBER(2)
);

INSERT INTO ALUM0405 VALUES ('34448974N', 'CONCHA', 'ESTRUCH VIDAL',TO_DATE('10/11/1985'),
'C/ MEDICO FELIX, 12','BERROCALEJO', 'CACERES',2,'DAI','A',0,0,0);
INSERT INTO ALUM0405 VALUES ('34448999N', 'DORA', 'MARTIN BREÑA',TO_DATE('10/11/1994'),
'C/ MEDICO FELIX, 10','BERROCALEJO', 'CACERES',1,'ESO','C',0,0,0);
 COMMIT;

REM ******** TABLA NOTAS_ALUMNOS: ***********

Drop table notas_alumnos cascade constraints;
create table notas_alumnos(
   NOMBRE_ALUMNO VARCHAR2(25) CONSTRAINT pk_notas_alumnos PRIMARY KEY,
   nota1 number(2),
   nota2 number(2),
   nota3 number(2)
 ) ;

insert into NOTAS_ALUMNOS VALUES ('Alcalde García, M. Luisa',5,5,5);
insert into NOTAS_ALUMNOS VALUES ('Benito Martín, Luis',7,6,8);
insert into NOTAS_ALUMNOS VALUES ('Casas Martínez, Manuel',7,5,5);
insert into NOTAS_ALUMNOS VALUES ('Corregidor Sánchez, Ana',6,9,8);
insert into NOTAS_ALUMNOS VALUES ('Díaz Sánchez, Maria',NULL,NULL,7);
COMMIT;

REM ******** TABLA LIBRERIA: *************

Drop table LIBRERIA cascade constraints;

create table LIBRERIA(
    TEMA CHAR(15) CONSTRAINT pk_libreria PRIMARY KEY,
    ESTANTE CHAR(1),
    EJEMPLARES NUMBER(2)
 );

INSERT INTO LIBRERIA VALUES ('INFORMATICA', 'A',15);
INSERT INTO LIBRERIA VALUES ('ECONOMIA',    'A',10);
INSERT INTO LIBRERIA VALUES ('DEPORTES',    'B',8);
INSERT INTO LIBRERIA VALUES ('FILOSOFIA',   'C',7);
INSERT INTO LIBRERIA VALUES ('DIBUJO',      'C',10);
INSERT INTO LIBRERIA VALUES ('MEDICINA',    'C',16);
INSERT INTO LIBRERIA VALUES ('BIOLOGIA',    'A',11);
INSERT INTO LIBRERIA VALUES ('GEOLOGIA',    'D',7);
INSERT INTO LIBRERIA VALUES ('SOCIEDAD',    'D',9);
INSERT INTO LIBRERIA VALUES ('LABORES',     'B',20);
INSERT INTO LIBRERIA VALUES ('JARDINERIA',    'E',6);
COMMIT;

REM ******** TABLAS ALUMNOS, ASIGNATURAS, NOTAS: ***********

DROP TABLE ALUMNOS cascade constraints;
CREATE TABLE ALUMNOS(
  DNI VARCHAR2(10) CONSTRAINT pk_alumnos PRIMARY KEY,
  APENOM VARCHAR2(30),
  DIREC VARCHAR2(30),
  POBLA  VARCHAR2(15),
  TELEF  VARCHAR2(10)  
) ;

DROP TABLE ASIGNATURAS cascade constraints;
CREATE TABLE ASIGNATURAS(
  COD NUMBER(2) CONSTRAINT pk_asignaturas PRIMARY KEY,
  NOMBRE VARCHAR2(25)
) ;

DROP TABLE NOTAS cascade constraints;
CREATE TABLE NOTAS(
  DNI VARCHAR2(10),
  COD NUMBER(2),
  NOTA NUMBER(2),
  CONSTRAINT pk_notas PRIMARY KEY (dni, cod),
  CONSTRAINT fk_notas_alumno FOREIGN KEY (dni) REFERENCES alumnos (dni),
  CONSTRAINT fk_notas_asig FOREIGN KEY (cod) REFERENCES asignaturas (cod)
);

INSERT INTO ASIGNATURAS VALUES (1,'Prog. Leng. Estr.');
INSERT INTO ASIGNATURAS VALUES (2,'Sist. Informáticos');
INSERT INTO ASIGNATURAS VALUES (3,'Análisis');
INSERT INTO ASIGNATURAS VALUES (4,'FOL');
INSERT INTO ASIGNATURAS VALUES (5,'RET');
INSERT INTO ASIGNATURAS VALUES (6,'Entornos Gráficos');
INSERT INTO ASIGNATURAS VALUES (7,'Aplic. Entornos 4ªGen');
INSERT INTO ASIGNATURAS VALUES (8,'Idioma');


INSERT INTO ALUMNOS VALUES
('12344345','Alcalde García, Elena', 'C/Las Matas, 24','Madrid','917766545');
INSERT INTO ALUMNOS VALUES
('4448242','Cerrato Vela, Luis', 'C/Mina 28 - 3A', 'Madrid','916566545');
INSERT INTO ALUMNOS VALUES
('56882942','Díaz Fernández, María', 'C/Luis Vives 25', 'Móstoles','915577545');

INSERT INTO NOTAS VALUES('12344345', 1,6);
INSERT INTO NOTAS VALUES('12344345', 2,5);
INSERT INTO NOTAS VALUES('12344345', 3,6);

INSERT INTO NOTAS VALUES('4448242', 4,6);
INSERT INTO NOTAS VALUES('4448242', 5,8);
INSERT INTO NOTAS VALUES('4448242', 6,4);
INSERT INTO NOTAS VALUES('4448242', 7,5);

INSERT INTO NOTAS VALUES('56882942', 4,8);
INSERT INTO NOTAS VALUES('56882942', 5,7);
INSERT INTO NOTAS VALUES('56882942', 6,8);
INSERT INTO NOTAS VALUES('56882942', 7,9);

COMMIT;
REM ******** FIN ***********************

--1)
--a)
SELECT * FROM ALUM0405;

--b)
SELECT dni, nombre, apellidos, curso, nivel, clase FROM ALUM0405;

--c)
SELECT * FROM ALUM0405 WHERE poblacion='GUADALAJARA';

--d)
SELECT nombre, apellidos FROM ALUM0405 WHERE  poblacion='GUADALAJARA';

--e)
SELECT dni, nombre, apellidos, curso, nivel, clase FROM ALUM0405 ORDER BY apellidos, nombre ASC;

--13)
SELECT tema, estante, ejemplares FROM LIBRERIA WHERE ejemplares BETWEEN 8 AND 15;

--14)
SELECT * FROM LIBRERIA WHERE ejemplares NOT BETWEEN 0 AND 8;

--16)
SELECT * FROM LIBRERIA WHERE ejemplares NOT BETWEEN 15 AND 20;

--GROUP BY, HAVING, ORDER BY
--1)
SELECT * FROM EMPLE;

SELECT dept_no , AVG(salario) FROM emple 
GROUP BY dept_no HAVING AVG(salario) > 2500 ORDER BY AVG(salario) DESC;

--2)
SELECT * FROM EMPLE;

SELECT oficio, COUNT(*) AS numero_empleados FROM emple
GROUP BY oficio HAVING COUNT (*) > 3 ORDER BY numero_empleados;

--3)
SELECT * FROM LIBRERIA;

SELECT estante, SUM (ejemplares) AS numero_ejemplares FROM LIBRERIA
GROUP BY estante HAVING SUM (ejemplares) > 10 ORDER BY numero_ejemplares DESC;

--4)
SELECT * FROM ALUM0405;

SELECT curso, nivel, COUNT(*) AS numero_alumnos FROM alum0405 
GROUP BY curso, nivel HAVING COUNT (*) > 5 ORDER BY numero_alumnos;

--5)
SELECT * FROM EMPLE;

SELECT dept_no, MAX(salario) AS salario_maximo FROM EMPLE
GROUP BY dept_no HAVING MAX(salario) > 3000 ORDER BY salario_maximo DESC;

--6)
SELECT dir, COUNT(*) AS empleados_direccion FROM emple
GROUP BY dir HAVING COUNT(*) > 2 ORDER BY empleados_direccion;

SELECT loc, COUNT(*) AS empleados_localidad FROM depart 
JOIN emple ON depart.dept_no = emple.dept_no 
GROUP BY loc HAVING COUNT(*) > 2 ORDER BY empleados_localidad;

SELECT * FROM emple;

--7)
SELECT tema, SUM(ejemplares) AS total_ejemplares FROM LIBRERIA
GROUP BY tema HAVING SUM (ejemplares) > 20 ORDER BY total_ejemplares DESC;

--8)
SELECT * FROM ALUM0405;

SELECT clase, COUNT (*) AS numero_alumnos FROM ALUM0405
GROUP BY clase HAVING COUNT (*) > 4 ORDER BY numero_alumnos ASC;

--9)
SELECT * FROM EMPLE;

SELECT oficio, AVG(salario) AS salario_promedio FROM EMPLE
GROUP BY oficio HAVING AVG(salario) > 2000 ORDER BY salario_promedio DESC;

--10)
SELECT * FROM EMPLE;

SELECT dept_no, COUNT (*) AS numero_empleados FROM EMPLE
GROUP BY dept_no HAVING COUNT(*) > 3 ORDER BY numero_empleados ASC;

--11)
SELECT * FROM LIBRERIA;

SELECT estante, SUM(ejemplares) AS ejemplares_estanteria FROM LIBRERIA
GROUP BY estante HAVING SUM(ejemplares) > 15 ORDER BY ejemplares_estanteria DESC;

--12)
SELECT * FROM ALUM0405;

SELECT nivel, COUNT (*) AS numero_alumnos FROM ALUM0405
GROUP BY nivel HAVING COUNT(*)  > 3 ORDER BY numero_alumnos ASC;

--13)
SELECT * FROM EMPLE;
SELECT * FROM DEPART;

SELECT loc, MAX(salario) AS salarioMaximo_localidad
FROM depart JOIN emple ON depart.dept_no = emple.dept_no
GROUP BY loc HAVING MAX(salario) > 3500 ORDER BY salarioMaximo_localidad DESC;

--14)
SELECT *FROM EMPLE;

SELECT oficio, COUNT (*) as numero_empleados FROM EMPLE
GROUP BY oficio HAVING COUNT (*) >2 ORDER BY numero_empleados ASC;

--15)
SELECT * FROM LIBRERIA;

SELECT tema, SUM(ejemplares) AS numero_ejemplares FROM LIBRERIA
GROUP BY tema HAVING SUM(ejemplares) > 25 ORDER BY numero_ejemplares DESC;

--16)
SELECT * FROM DEPART;
SELECT * FROM EMPLE;

--xk no funciona con dept_no?
SELECT  dnombre, loc, AVG (salario) AS salario_promedio FROM DEPART
JOIN EMPLE ON DEPART.dept_no = EMPLE.dept_no
GROUP BY dnombre, loc HAVING AVG(salario) > 2500 ORDER BY salario_promedio DESC;

--17)
SELECT * FROM DEPART;
SELECT * FROM EMPLE;

SELECT oficio, loc, COUNT(*) AS numero_empleados FROM EMPLE
JOIN DEPART ON depart.dept_no = emple.dept_no
GROUP BY oficio,loc HAVING COUNT(*) > 1 AND MAX(salario) > 3000 ORDER BY numero_empleados ASC;

--18)
SELECT * FROM LIBRERIA;

SELECT tema, estante, SUM(ejemplares) AS ejemplares_totales FROM LIBRERIA
GROUP BY tema,estante HAVING SUM(ejemplares) BETWEEN 10 AND 20 ORDER BY ejemplares_totales DESC;

--19)
SELECT * FROM ALUM0405;

SELECT curso,nivel,clase, COUNT(*) AS numero_alumnos FROM ALUM0405
GROUP BY curso, nivel, clase HAVING COUNT(*) > 2 AND SUM(faltas1+faltas2+faltas3) < 5
ORDER BY numero_alumnos ASC;

--20)
SELECT * FROM DEPART;
SELECT * FROM EMPLE;

SELECT oficio, dnombre, AVG(salario) AS salario_promedio 
FROM EMPLE JOIN DEPART ON  DEPART.dept_no = EMPLE.dept_no
GROUP BY oficio, dnombre 
HAVING COUNT(*) > 1 AND MAX(salario) > 3500 
ORDER BY salario_promedio DESC;

----------------------2ºParte

--2)
SELECT * FROM EMPLE;

SELECT apellido, oficio, salario, fecha_alt FROM EMPLE  
WHERE oficio = (SELECT   oficio FROM EMPLE WHERE  EMPLE.APELLIDO = 'FERNANDEZ')
OR salario > (SELECT salario FROM EMPLE WHERE  EMPLE.APELLIDO = 'FERNANDEZ');

--3)
SELECT * FROM EMPLE;

SELECT apellido, oficio FROM EMPLE E
WHERE oficio IN (SELECT oficio FROM EMPLE E WHERE E.apellido='JIMENEZ');
--4)

SELECT E.APELLIDO, E.OFICIO, E.SALARIO
FROM EMPLE  E
JOIN DEPART D ON E.DEPT_NO = D.DEPT_NO
WHERE E.APELLIDO = 'FERNANDEZ' AND E.SALARIO = (SELECT SALARIO FROM EMPLE WHERE APELLIDO ='FERNANDEZ');
--5)
SELECT * FROM ALUM0405;
SELECT * FROM NOTAS;
SELECT * FROM ASIGNATURAS;

SELECT APENOM, NOMBRE, NOTA FROM ALUMNOS
JOIN NOTAS ON ALUMNOS.DNI=NOTAS.DNI
JOIN ASIGNATURAS ON NOTAS.COD=ASIGNATURAS.COD
WHERE NOMBRE='FOL' AND NOTA BETWEEN 7 AND 8;

--6)
SELECT DISTINCT NOMBRE FROM ASIGNATURAS A
JOIN NOTAS N ON A.COD=N.COD
WHERE NOTA>=5;

--7)
SELECT* FROM EMPLE;
SELECT * FROM DEPART;

SELECT apellido, oficio, loc FROM EMPLE E
JOIN DEPART D ON e.dept_no = e.dept_no
WHERE oficio = 'ANALISTA';

--8)
SELECT * FROM EMPLE;

SELECT * FROM EMPLE E 
WHERE dir = (SELECT dir FROM EMPLE E WHERE E.APELLIDO = 'CEREZO');

--9)
SELECT * FROM EMPLE;
SELECT * FROM DEPART;

SELECT * FROM EMPLE E
JOIN DEPART D ON E.DEPT_NO = D.DEPT_NO
WHERE D.dnombre = 'VENTAS';

--10)
SELECT * FROM EMPLE;
SELECT * FROM DEPART;

SELECT * FROM DEPART D
LEFT JOIN EMPLE E ON E.DEPT_NO = D.DEPT_NO
WHERE E.emp_no is null;

SELECT *--examen
FROM DEPART
WHERE DEPT_NO NOT IN (SELECT DEPT_NO FROM EMPLE);

--11)
--demasiados campos//mejor sin left join
SELECT * FROM DEPART D
LEFT JOIN EMPLE E ON E.DEPT_NO = D.DEPT_NO
WHERE E.emp_no is not null;

SELECT *--examen
FROM DEPART
WHERE DEPT_NO IN (SELECT DEPT_NO FROM EMPLE);

--12)
SELECT * FROM EMPLE;
SELECT * FROM DEPART;

SELECT apellido, salario FROM EMPLE
WHERE salario > (SELECT MAX(salario) FROM EMPLE WHERE dept_no = 20);--solo se puede comparar con 1 valor, de ahi el max

--15)
SELECT* FROM LIBRERIA;

SELECT tema FROM LIBRERIA 
WHERE ejemplares < (SELECT ejemplares  FROM LIBRERIA WHERE tema = 'MEDICINA');

--17)
SELECT * FROM ASIGNATURAS;
SELECT * FROM ALUMNOS;
SELECT * FROM NOTAS;

SELECT A.nombre FROM ASIGNATURAS A
WHERE A.COD IN
(SELECT N.COD
FROM NOTAS N INNER JOIN ALUMNOS AL
ON N.DNI=AL.DNI WHERE AL.POBLA = 'Madrid')
AND A.NOMBRE LIKE '%o%o%o%';

SELECT * FROM NOTAS NO
JOIN ALUMNOS AL ON AL.dni = no.dni
JOIN ASIGNATURAS ASI ON ASI.cod = NO.cod
WHERE  ASI.nombre LIKE '%o%o%o%' AND AL.pobla = 'Madrid';

--Hasta aqui se corrigio
--18)
SELECT * FROM ASIGNATURAS;
SELECT * FROM ALUMNOS;
SELECT * FROM NOTAS;

SELECT apenom FROM ALUMNOS AL
JOIN NOTAS NO ON AL.dni = no.dni
JOIN ASIGNATURAS ASI ON ASI.cod = NO.cod
WHERE AL.pobla = 'Madrid' AND NO.nota < 5;

--19)
SELECT * FROM ASIGNATURAS;
SELECT * FROM ALUMNOS;
SELECT * FROM NOTAS;

SELECT apenom FROM ALUMNOS AL
JOIN NOTAS NO ON AL.dni = NO.dni
JOIN ASIGNATURAS ASI ON ASI.cod = NO.cod
WHERE NO.nota = 
(SELECT nota FROM NOTAS NO
JOIN ALUMNOS AL ON AL.dni = NO.dni
JOIN ASIGNATURAS ASI ON ASI.cod = NO.cod
WHERE AL.apenom = 'Díaz Fernández, María' AND ASI.nombre = 'FOL')
AND AL.apenom != 'Díaz Fernández, María';
--Tambien selecciona a maria cuando no deberia
--solucionado con el and

--20)
SELECT * FROM ASIGNATURAS;
SELECT * FROM ALUMNOS;
SELECT * FROM NOTAS;
 
SELECT * FROM ASIGNATURAS ASI
WHERE cod NOT IN (SELECT cod FROM NOTAS);
--Tecnicamente selecciona las asignaturas que no tienen notas

--21)
SELECT * FROM ASIGNATURAS;
SELECT * FROM ALUMNOS;
SELECT * FROM NOTAS;
 
SELECT apenom FROM ALUMNOS AL
JOIN NOTAS NO ON NO.dni = AL.dni
JOIN ASIGNATURAS ASI ON ASI.cod = NO.cod
WHERE ASI.cod = 1;

--22)
SELECT * FROM ASIGNATURAS;
SELECT * FROM ALUMNOS;
SELECT * FROM NOTAS;

SELECT apenom FROM ALUMNOS
WHERE dni NOT IN (SELECT dni FROM NOTAS WHERE cod=1);
