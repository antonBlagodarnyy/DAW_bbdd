SELECT * FROM DEPARTAMENTORESPASO;
SELECT * FROM EMPLEADOREPASO;

--1.Lista el primer apellido de los empleados eliminando los apellidos que est?n repetidos.
SELECT DISTINCT APELLIDO1 FROM EMPLEADOREPASO;

--2.Lista el nombre y apellidos de los empleados en una ?nica columna.
SELECT nombre || ' ' || apellido1 || ' ' || apellido2 FROM EMPLEADOREPASO;

--3.Lista el nombre y apellidos de los empleados en una ?nica columna, convirtiendo todos los caracteres en may?scula.
SELECT UPPER(nombre || ' ' || apellido1 || ' ' || apellido2) FROM EMPLEADOREPASO;

--4.Lista el nombre y apellidos de los empleados en una ?nica columna, convirtiendo todos los caracteres en min?scula.
SELECT LOWER(nombre || ' ' || apellido1 || ' ' || apellido2) FROM EMPLEADOREPASO;

--5.Lista el identificador de los empleados junto al nif, pero el nif deber? aparecer en dos columnas, 
--una mostrar? ?nicamente los d?gitos del nif y la otra la letra.
SELECT ID ||' '|| SUBSTR(nif,1,8), SUBSTR(nif,8) FROM EMPLEADOREPASO;

--6.Lista los apellidos y el nombre de todos los empleados, ordenados de forma alfab?tica 
--tendiendo en cuenta en primer lugar sus apellidos y luego su nombre.
SELECT APELLIDO1 ||' '|| APELLIDO2, NOMBRE FROM EMPLEADOREPASO ORDER BY APELLIDO1 ASC, NOMBRE ASC;

--7.Devuelve una lista con el nombre y el presupuesto, de los 3 departamentos que tienen menor presupuesto.
--Comandos viejos
SELECT nombre, presupuesto FROM (SELECT nombre, presupuesto FROM DEPARTAMENTORESPASO
ORDER BY PRESUPUESTO ASC)
WHERE ROWNUM<=3;
--Comandos nuevos
SELECT nombre, presupuesto FROM DEPARTAMENTORESPASO ORDER BY PRESUPUESTO ASC FETCH FIRST 3 ROWS ONLY;

--8.Devuelve una lista con el nombre y el gasto, de los 2 departamentos que tienen mayor gasto.
SELECT nombre, gastos FROM DEPARTAMENTORESPASO ORDER BY gastos DESC FETCH FIRST 2 ROWS ONLY;

--9.Devuelve una lista con el nombre de los departamentos y el presupuesto, de aquellos que tienen un presupuesto entre 100000 y 200000 euros.
--Sin utilizar el operador BETWEEN.
SELECT nombre, presupuesto FROM DEPARTAMENTORESPASO 
WHERE presupuesto >= 100000 and presupuesto <= 200000;

--10.Devuelve una lista con el nombre de los departamentos que tienen un presupuesto entre 100000 y 200000 euros. Utilizando el operador BETWEEN.
SELECT nombre, presupuesto FROM DEPARTAMENTORESPASO 
WHERE presupuesto BETWEEN 100000 and 200000;

--11.Devuelve una lista con el nombre de los departamentos, gastos y presupuesto, de aquellos departamentos donde los gastos sean mayores
--que el presupuesto del que disponen.
SELECT nombre, gastos, presupuesto FROM DEPARTAMENTORESPASO 
WHERE gastos > presupuesto;

--12.Lista todos los datos de los empleados cuyo segundo apellido sea NULL.
SELECT * FROM EMPLEADOREPASO
WHERE APELLIDO2 IS NULL;

--13.Lista todos los datos de los empleados cuyo segundo apellido no sea NULL.
SELECT * FROM EMPLEADOREPASO
WHERE APELLIDO2 IS NOT NULL;

--14.Lista los nombres, apellidos y nif de los empleados que trabajan en los departamentos 2, 4 o 5.
SELECT nombre, apellido1 || ' ' || apellido2 as apellidos, nif FROM EMPLEADOREPASO 
WHERE id_departamento = 2 OR
id_departamento = 4 OR
id_departamento = 5;

--CON JOIN
SELECT * FROM PRODUCTOREPASO;
SELECT * FROM FABRICANTEREPASO;
SELECT * FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON p.id_fabricante=f.id;
--1. Devuelve una lista con el nombre del producto, precio y nombre de fabricante de todos los productos de la base de datos.
SELECT p.nombre, p.precio, f.nombre FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON F.ID=P.ID_FABRICANTE;

--2. Devuelve una lista con el nombre del producto, precio y nombre de fabricante de todos los productos de la base de datos. 
--Ordene el resultado por el nombre del fabricante, por orden alfab?tico.
SELECT p.nombre, p.precio, f.nombre FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON F.ID=P.ID_FABRICANTE
ORDER BY f.nombre ASC;

--3. Devuelve una lista con el identificador del producto, nombre del producto, identificador del fabricante y nombre del fabricante, 
--de todos los productos de la base de datos.
SELECT p.id, p.nombre, f.id, f.nombre FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON F.ID=P.ID_FABRICANTE;

--4. Devuelve el nombre del producto, su precio y el nombre de su fabricante, del producto m?s barato.
SELECT p.nombre,p.precio, f.nombre AS nombre_fabricante FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON F.ID=P.ID_FABRICANTE
ORDER BY p.precio ASC FETCH FIRST ROW ONLY;

--5. Devuelve el nombre del producto, su precio y el nombre de su fabricante, del producto m?s caro.
SELECT p.nombre,p.precio, f.nombre AS nombre_fabricante FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON F.ID=P.ID_FABRICANTE
ORDER BY p.precio DESC FETCH FIRST ROW ONLY;

--6. Devuelve una lista de todos los productos del fabricante Lenovo.
SELECT * FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON F.ID=P.ID_FABRICANTE
WHERE f.nombre='Lenovo';

--7. Devuelve una lista de todos los productos del fabricante Crucial que tengan un precio mayor que 200?.
SELECT * FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON F.ID=P.ID_FABRICANTE
WHERE f.nombre='Crucial'
AND p.precio > 200;

--8. Devuelve un listado con todos los productos de los fabricantes Asus, Hewlett-Packardy Seagate. Sin utilizar el operador IN.
SELECT * FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON F.ID=P.ID_FABRICANTE
WHERE f.nombre='Asus' OR
f.nombre='Hewlett-Packard' OR
f.nombre= 'Seagate';

--9. Devuelve un listado con todos los productos de los fabricantes Asus, Hewlett-Packardy Seagate. Utilizando el operador IN.
SELECT * FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON F.ID=P.ID_FABRICANTE
WHERE f.nombre IN
(SELECT nombre FROM FABRICANTEREPASO WHERE nombre ='Asus' OR
nombre='Hewlett-Packard' OR
nombre= 'Seagate');

--10. Devuelve un listado con el nombre y el precio de todos los productos de los fabricantes cuyo nombre termine por la vocal ?e?.
SELECT p.nombre, p.precio FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON F.ID=P.ID_FABRICANTE
WHERE f.nombre LIKE '%e';

--11. Devuelve un listado con el nombre y el precio de todos los productos cuyo nombre de fabricante contenga el car?cter ?w? en su nombre.
SELECT p.nombre, p.precio FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON F.ID=P.ID_FABRICANTE
WHERE f.nombre LIKE '%w%';

--12. Devuelve un listado con el nombre de producto, precio y nombre de fabricante, 
--de todos los productos que tengan un precio mayor o igual a 180?.
--Ordene el resultado en primer lugar por el precio (en orden descendente)
--y en segundo lugar por el nombre (en orden ascendente).
SELECT p.nombre, p.precio, f.nombre
FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON F.ID=P.ID_FABRICANTE
WHERE p.precio>180
ORDER BY p.precio DESC, p.nombre ASC;

--13. Devuelve un listado con el identificador y el nombre de fabricante, 
--solamente de aquellos fabricantes que tienen productos asociados en la base de datos.
SELECT id, nombre FROM FABRICANTEREPASO
WHERE ID IN (SELECT id_fabricante FROM PRODUCTOREPASO);

--Segunda parte

--14. Calcula el n?mero total de productos que hay en la tabla productos.
SELECT COUNT(*) AS numero_productos FROM PRODUCTOREPASO;

--15. Calcula el n?mero total de fabricantes que hay en la tabla fabricante.
SELECT COUNT(*) AS numero_fabricantes FROM FABRICANTEREPASO;

--16. Calcula el n?mero de valores distintos de identificador de fabricante aparecen en la tabla productos.
SELECT  COUNT(DISTINCT id_fabricante) FROM PRODUCTOREPASO;

--17. Calcula la media del precio de todos los productos.
SELECT AVG(precio) AS media_precios FROM PRODUCTOREPASO;

--18. Calcula el precio m?s barato de todos los productos.
SELECT precio AS precio_mas_barato FROM PRODUCTOREPASO
ORDER BY precio FETCH FIRST ROW ONLY;

--19. Calcula el precio m?s caro de todos los productos.
SELECT precio AS precio_mas_caro FROM PRODUCTOREPASO
ORDER BY precio DESC FETCH FIRST ROW ONLY;

--20. Lista el nombre y el precio del producto m?s barato.
SELECT nombre, precio AS precio_mas_barato FROM PRODUCTOREPASO
ORDER BY precio  FETCH FIRST ROW ONLY;

--21. Lista el nombre y el precio del producto m?s caro.
SELECT nombre, precio AS precio_mas_caro FROM PRODUCTOREPASO
ORDER BY precio DESC FETCH FIRST ROW ONLY;

--22. Calcula la suma de los precios de todos los productos.
SELECT SUM(precio) AS suma_de_precios FROM PRODUCTOREPASO;

--23. Calcula el n?mero de productos que tiene el fabricante Asus.
SELECT COUNT(*) AS numero_de_productos_de_asus FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON p.id_fabricante=f.id
WHERE f.nombre='Asus';

--24. Calcula la media del precio de todos los productos del fabricante Asus.
SELECT AVG(precio) AS media_de_precios_de_asus FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON p.id_fabricante=f.id
WHERE f.nombre='Asus';

--25. Calcula el precio m?s barato de todos los productos del fabricante Asus.
SELECT precio AS precio_mas_barato FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON p.id_fabricante=f.id
WHERE f.nombre='Asus'
ORDER BY precio ASC FETCH FIRST ROW ONLY;

--26. Calcula el precio m?s caro de todos los productos del fabricante Asus.
SELECT precio AS precio_mas_caro FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON p.id_fabricante=f.id
WHERE f.nombre='Asus'
ORDER BY precio DESC FETCH FIRST ROW ONLY;

--27. Calcula la suma de todos los productos del fabricante Asus.
SELECT SUM(p.precio) AS suma_productos_asus FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON p.id_fabricante=f.id
WHERE f.nombre='Asus';

--28. Muestra el precio m?ximo, precio m?nimo, precio medio y el n?mero total de productos que tiene el fabricante Crucial.
SELECT MAX(p.precio) AS precio_maximo, MIN(p.precio) AS precio_minimo, COUNT(*) AS numero_productos FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F
ON p.id_fabricante=f.id
WHERE f.nombre='Crucial';

--29. Muestra el n?mero total de productos que tiene cada uno de los fabricantes. 
--El listado tambi?n debe incluir los fabricantes que no tienen ning?n producto. 
--El resultado mostrar? dos columnas, una con el nombre del fabricante y otra con el n?mero de productos que tiene.
--Ordene el resultado descendentemente por el n?mero de productos.
SELECT f.nombre, COUNT(*) AS numero_productos FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F 
ON F.id=p.id_fabricante
GROUP BY f.nombre;

--30. Muestra el precio m?ximo, precio m?nimo y precio medio de los productos de cada uno de los fabricantes. 
--El resultado mostrar? el nombre del fabricante junto con los datos que se solicitan.
SELECT f.nombre AS nombre_fabricante, MAX(p.precio), MIN(p.precio), AVG(p.precio) FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F 
ON F.id=p.id_fabricante
GROUP BY f.nombre;

--31. Muestra el precio m?ximo, precio m?nimo, precio medio y el n?mero total de productos de los fabricantes
--que tienen un precio medio superior a 200?. No es necesario mostrar el nombre del fabricante, 
--con el identificador del fabricante es suficiente.
SELECT f.id, MAX(p.precio), MIN(p.precio), AVG(p.precio), COUNT(*) AS numero_productos FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F 
ON F.id=p.id_fabricante
GROUP BY f.id
HAVING AVG(p.precio) > 200;

--32. Muestra el nombre de cada fabricante, junto con el precio m?ximo, precio m?nimo, precio medio y el n?mero total de productos de 
--los fabricantes que tienen un precio medio superior a 200?. Es necesario mostrar el nombre del fabricante.
SELECT f.nombre AS nombre_fabricante, MAX(p.precio), MIN(p.precio), AVG(p.precio), COUNT(*) AS numero_productos FROM PRODUCTOREPASO P
JOIN FABRICANTEREPASO F 
ON F.id=p.id_fabricante
GROUP BY f.nombre
HAVING AVG(p.precio) > 200;

--33. Calcula el n?mero de productos que tienen un precio mayor o igual a 180?.
SELECT COUNT(*) AS numero_productos FROM PRODUCTOREPASO
WHERE precio>180;

--34. Calcula el n?mero de productos que tiene cada fabricante con un precio mayor o igual a 180?.
SELECT * FROM PRODUCTOREPASO;
SELECT * FROM FABRICANTEREPASO;

SELECT f.nombre, COUNT(*) AS PRODUCTO_FABRICANTE FROM FABRICANTEREPASO F
JOIN PRODUCTOREPASO P 
ON F.ID=P.ID_FABRICANTE
WHERE P.PRECIO>=180
GROUP BY f.nombre;

--35. Lista el precio medio los productos de cada fabricante, mostrando solamente el identificador del fabricante.
SELECT F.ID, AVG(precio) FROM FABRICANTEREPASO F
JOIN PRODUCTOREPASO P 
ON F.ID=P.ID_FABRICANTE
GROUP BY F.ID;

--36. Lista el precio medio los productos de cada fabricante, mostrando solamente el nombre del fabricante.
SELECT F.nombre, AVG(precio) FROM FABRICANTEREPASO F
JOIN PRODUCTOREPASO P 
ON F.ID=P.ID_FABRICANTE
GROUP BY F.nombre;

--37. Lista los nombres de los fabricantes cuyos productos tienen un precio medio mayor o igual a 150?.
SELECT F.nombre FROM FABRICANTEREPASO F
JOIN PRODUCTOREPASO P 
ON F.ID=P.ID_FABRICANTE
WHERE P.precio>=150;

--38. Devuelve un listado con los nombres de los fabricantes que tienen 2 o mas productos.
SELECT F.nombre, COUNT(p.id) FROM FABRICANTEREPASO F
JOIN PRODUCTOREPASO P
ON F.ID=P.ID_FABRICANTE
GROUP BY f.nombre
HAVING COUNT(p.id)>2;

--39. Devuelve un listado con los nombres de los fabricantes y el numero de productos que tiene cada uno 
--con un precio superior o igual a 220 ?. No es necesario mostrar el nombre de los fabricantes 
--que no tienen productos que cumplan la condicion.


--40. Devuelve un listado con los nombres de los fabricantes donde la suma del precio de todos sus productos es superior a 1000 ?.
--41. Devuelve un listado con el nombre del producto m?s caro que tiene cada fabricante. El resultado debe tener tres columnas: nombre del producto, precio y nombre del fabricante. El resultado tiene que estar ordenado alfab?ticamente de menor a mayor por el nombre del fabricante.
