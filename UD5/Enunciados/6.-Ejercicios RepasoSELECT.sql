--PRACTICAMOS SQL
-- Crear tabla departamentorepaso
CREATE TABLE departamentorespaso (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre VARCHAR2(100) NOT NULL,
  presupuesto NUMBER(10,2) NOT NULL,
  gastos NUMBER(10,2) NOT NULL
);

-- Crear tabla empleadorepaso
CREATE TABLE empleadorepaso (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nif VARCHAR(9) NOT NULL UNIQUE,
  nombre VARCHAR(100) NOT NULL,
  apellido1 VARCHAR(100) NOT NULL,
  apellido2 VARCHAR(100),
  id_departamento NUMBER,
  CONSTRAINT fk_departamento FOREIGN KEY (id_departamento) REFERENCES departamentorespaso(id)
);

-- Insertar datos en tabla departamentorepaso
INSERT INTO departamentorespaso VALUES(1,'Desarrollo', 120000, 6000);
INSERT INTO departamentorespaso VALUES(2, 'Sistemas', 150000, 21000);
INSERT INTO departamentorespaso VALUES(3, 'Recursos Humanos', 280000, 25000);
INSERT INTO departamentorespaso VALUES(4, 'Contabilidad', 110000, 3000);
INSERT INTO departamentorespaso VALUES(5, 'I+D', 375000, 380000);
INSERT INTO departamentorespaso VALUES(6, 'Proyectos', 0, 0);
INSERT INTO departamentorespaso VALUES(7, 'Publicidad', 0, 1000);

-- Insertar datos en tabla empleadorepaso
INSERT INTO empleadorepaso VALUES(1, '32481596F', 'Aar�n', 'Rivero', 'G�mez', 1);
INSERT INTO empleadorepaso VALUES(2, 'Y5575632D', 'Adela', 'Salas', 'D�az', 2);
INSERT INTO empleadorepaso VALUES(3, 'R6970642B', 'Adolfo', 'Rubio', 'Flores', 3);
INSERT INTO empleadorepaso VALUES(4, '77705545E', 'Adri�n', 'Su�rez', NULL, 4);
INSERT INTO empleadorepaso VALUES(5, '17087203C', 'Marcos', 'Loyola', 'M�ndez', 5);
INSERT INTO empleadorepaso VALUES(6, '38382980M', 'Mar�a', 'Santana', 'Moreno', 1);
INSERT INTO empleadorepaso VALUES(7, '80576669X', 'Pilar', 'Ruiz', NULL, 2);
INSERT INTO empleadorepaso VALUES(8, '71651431Z', 'Pepe', 'Ruiz', 'Santana', 3);
INSERT INTO empleadorepaso VALUES(9, '56399183D', 'Juan', 'G�mez', 'L�pez', 2);
INSERT INTO empleadorepaso VALUES(10, '46384486H', 'Diego','Flores', 'Salas', 5);
INSERT INTO empleadorepaso VALUES(11, '67389283A', 'Marta','Herrera', 'Gil', 1);
INSERT INTO empleadorepaso VALUES(12, '41234836R', 'Irene','Salas', 'Flores', NULL);
INSERT INTO empleadorepaso VALUES(13, '82635162B', 'Juan Antonio','S�ez', 'Guerrero', NULL);

--1.Lista el primer apellido de los empleados eliminando los apellidos que est�n repetidos.
--2.Lista el nombre y apellidos de los empleados en una �nica columna.
--3.Lista el nombre y apellidos de los empleados en una �nica columna, convirtiendo todos los caracteres en may�scula.
--4.Lista el nombre y apellidos de los empleados en una �nica columna, convirtiendo todos los caracteres en min�scula.
--5.Lista el identificador de los empleados junto al nif, pero el nif deber� aparecer en dos columnas, una mostrar� �nicamente los d�gitos del nif y la otra la letra.
--6.Lista los apellidos y el nombre de todos los empleados, ordenados de forma alfab�tica tendiendo en cuenta en primer lugar sus apellidos y luego su nombre.
--7.Devuelve una lista con el nombre y el presupuesto, de los 3 departamentos que tienen menor presupuesto.
--8.Devuelve una lista con el nombre y el gasto, de los 2 departamentos que tienen mayor gasto.
--9.Devuelve una lista con el nombre de los departamentos y el presupuesto, de aquellos que tienen un presupuesto entre 100000 y 200000 euros. Sin utilizar el operador BETWEEN.
--10.Devuelve una lista con el nombre de los departamentos que tienen un presupuesto entre 100000 y 200000 euros. Utilizando el operador BETWEEN.
--11.Devuelve una lista con el nombre de los departamentos, gastos y presupuesto, de aquellos departamentos donde los gastos sean mayores que el presupuesto del que disponen.
--12.Lista todos los datos de los empleados cuyo segundo apellido sea NULL.
--13.Lista todos los datos de los empleados cuyo segundo apellido no sea NULL.
--14.Lista los nombres, apellidos y nif de los empleados que trabajan en los departamentos 2, 4 o 5.

--PRATICAMOS JOIN, funciones de agrupaci�n, filtros...etc
CREATE TABLE fabricanterepaso (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL
);

CREATE TABLE productorepaso (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    precio FLOAT NOT NULL,
    id_fabricante NUMBER NOT NULL,
    CONSTRAINT fk_fabricanterepaso FOREIGN KEY (id_fabricante) REFERENCES fabricanterepaso(id)
);

INSERT INTO fabricanterepaso VALUES (1, 'Asus');
INSERT INTO fabricanterepaso VALUES (2, 'Lenovo');
INSERT INTO fabricanterepaso VALUES (3, 'Hewlett-Packard');
INSERT INTO fabricanterepaso VALUES (4, 'Samsung');
INSERT INTO fabricanterepaso VALUES (5, 'Seagate');
INSERT INTO fabricanterepaso VALUES (6, 'Crucial');
INSERT INTO fabricanterepaso VALUES (7, 'Gigabyte');
INSERT INTO fabricanterepaso VALUES (8, 'Huawei');
INSERT INTO fabricanterepaso VALUES (9, 'Xiaomi');

INSERT INTO productorepaso VALUES (1, 'Disco duro SATA3 1TB', 86.99,5);
INSERT INTO productorepaso VALUES (2, 'Memoria RAM DDR4 8GB', 120,6);
INSERT INTO productorepaso VALUES (3, 'Disco SSD 1 1TB', 150.99,4);
INSERT INTO productorepaso VALUES (4, 'GeForce GTX 1050ti', 185,7);
INSERT INTO productorepaso VALUES (5, 'GeForce GTX 1080 Xtreme', 755,6);
INSERT INTO productorepaso VALUES (6, 'Monitor 24 Led Full HD', 202,1);
INSERT INTO productorepaso VALUES (7, 'Monitor 27 LED Full HD', 245.99,1);
INSERT INTO productorepaso VALUES (8, 'Portatil Yoga 520', 559,2);
INSERT INTO productorepaso VALUES (9, 'Protatil Ideapd 320', 444,2);
INSERT INTO productorepaso VALUES (10, 'Impresora HP Deskjet 3720', 59.99,3);
INSERT INTO productorepaso VALUES (11, 'Impresora HP Laserjet Pro M26nw', 180,3);

--1. Devuelve una lista con el nombre del producto, precio y nombre de fabricante de todos los productos de la base de datos.
--2. Devuelve una lista con el nombre del producto, precio y nombre de fabricante de todos los productos de la base de datos. Ordene el resultado por el nombre del fabricante, por orden alfab�tico.
--3. Devuelve una lista con el identificador del producto, nombre del producto, identificador del fabricante y nombre del fabricante, de todos los productos de la base de datos.
--4. Devuelve el nombre del producto, su precio y el nombre de su fabricante, del producto m�s barato.
--5. Devuelve el nombre del producto, su precio y el nombre de su fabricante, del producto m�s caro.
--6. Devuelve una lista de todos los productos del fabricante Lenovo.
--7. Devuelve una lista de todos los productos del fabricante Crucial que tengan un precio mayor que 200�.
--8. Devuelve un listado con todos los productos de los fabricantes Asus, Hewlett-Packardy Seagate. Sin utilizar el operador IN.
--9. Devuelve un listado con todos los productos de los fabricantes Asus, Hewlett-Packardy Seagate. Utilizando el operador IN.
--10. Devuelve un listado con el nombre y el precio de todos los productos de los fabricantes cuyo nombre termine por la vocal �e�.
--11. Devuelve un listado con el nombre y el precio de todos los productos cuyo nombre de fabricante contenga el car�cter �w� en su nombre.
--12. Devuelve un listado con el nombre de producto, precio y nombre de fabricante, de todos los productos que tengan un precio mayor o igual a 180�. Ordene el resultado en primer lugar por el precio (en orden descendente) y en segundo lugar por el nombre (en orden ascendente).
--13. Devuelve un listado con el identificador y el nombre de fabricante, solamente de aquellos fabricantes que tienen productos asociados en la base de datos.
--
--14. Calcula el n�mero total de productos que hay en la tabla productos.
--15. Calcula el n�mero total de fabricantes que hay en la tabla fabricante.
--16. Calcula el n�mero de valores distintos de identificador de fabricante aparecen en la tabla productos.
--17. Calcula la media del precio de todos los productos.
--18. Calcula el precio m�s barato de todos los productos.
--19. Calcula el precio m�s caro de todos los productos.
--20. Lista el nombre y el precio del producto m�s barato.
--21. Lista el nombre y el precio del producto m�s caro.
--22. Calcula la suma de los precios de todos los productos.
--23. Calcula el n�mero de productos que tiene el fabricante Asus.
--24. Calcula la media del precio de todos los productos del fabricante Asus.
--25. Calcula el precio m�s barato de todos los productos del fabricante Asus.
--26. Calcula el precio m�s caro de todos los productos del fabricante Asus.
--27. Calcula la suma de todos los productos del fabricante Asus.
--28. Muestra el precio m�ximo, precio m�nimo, precio medio y el n�mero total de productos que tiene el fabricante Crucial.
--29. Muestra el n�mero total de productos que tiene cada uno de los fabricantes. El listado tambi�n debe incluir los fabricantes que no tienen ning�n producto. El resultado mostrar� dos columnas, una con el nombre del fabricante y otra con el n�mero de productos que tiene. Ordene el resultado descendentemente por el n�mero de productos.
--30. Muestra el precio m�ximo, precio m�nimo y precio medio de los productos de cada uno de los fabricantes. El resultado mostrar� el nombre del fabricante junto con los datos que se solicitan.
--31. Muestra el precio m�ximo, precio m�nimo, precio medio y el n�mero total de productos de los fabricantes que tienen un precio medio superior a 200�. No es necesario mostrar el nombre del fabricante, con el identificador del fabricante es suficiente.
--32. Muestra el nombre de cada fabricante, junto con el precio m�ximo, precio m�nimo, precio medio y el n�mero total de productos de los fabricantes que tienen un precio medio superior a 200�. Es necesario mostrar el nombre del fabricante.
--33. Calcula el n�mero de productos que tienen un precio mayor o igual a 180�.
--34. Calcula el n�mero de productos que tiene cada fabricante con un precio mayor o igual a 180�.
--35. Lista el precio medio los productos de cada fabricante, mostrando solamente el identificador del fabricante.
--36. Lista el precio medio los productos de cada fabricante, mostrando solamente el nombre del fabricante.
--37. Lista los nombres de los fabricantes cuyos productos tienen un precio medio mayor o igual a 150�.
--38. Devuelve un listado con los nombres de los fabricantes que tienen 2 o m�s productos.
--39. Devuelve un listado con los nombres de los fabricantes y el n�mero de productos que tiene cada uno con un precio superior o igual a 220 �. No es necesario mostrar el nombre de los fabricantes que no tienen productos que cumplan la condici�n.
--40. Devuelve un listado con los nombres de los fabricantes donde la suma del precio de todos sus productos es superior a 1000 �.
--41. Devuelve un listado con el nombre del producto m�s caro que tiene cada fabricante. El resultado debe tener tres columnas: nombre del producto, precio y nombre del fabricante. El resultado tiene que estar ordenado alfab�ticamente de menor a mayor por el nombre del fabricante.
